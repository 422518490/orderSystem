<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yaya.product.dao.ProductMapper">

    <insert id="addProduct" parameterType="productDTO" >
        INSERT INTO PRODUCT(
            PRODUCT_ID,
            MERCHANT_ID,
            PRODUCT_NAME,
            PRODUCT_DESCRIPTION,
            PRODUCT_PRICE,
            PRODUCT_PICTURE,
            PRODUCT_ORDER_COUNT,
            PRODUCT_ENABLE,
            CREATE_TIME,
            LAST_UPDATE_TIME
        )
        VALUES
        (
            #{productId},
            #{merchantId},
            #{productName},
            #{productDescription},
            #{productPrice},
            #{productPicture},
            0,
            '01',
            now(),
            now()
        )
    </insert>

    <select id="getProducts" parameterType="productDTO" resultType="productDTO">
        SELECT
            P.PRODUCT_ID productId,
            P.PRODUCT_NAME productName,
            P.PRODUCT_DESCRIPTION productDescription,
            P.PRODUCT_PRICE productPrice,
            P.PRODUCT_PICTURE productPicture,
            P.PRODUCT_ORDER_COUNT productOrderCount,
            P.PRODUCT_ENABLE productEnable,
            P.CREATE_TIME createTime,
            P.LAST_UPDATE_TIME lastUpdateTime,
            P.MERCHANT_ID merchantId
        FROM
            PRODUCT P
        WHERE
            P.PRODUCT_ENABLE = #{productEnable}
        AND P.MERCHANT_ID = #{merchantId}
        <if test="productName != null and productName != ''">
            AND P.PRODUCT_NAME LIKE CONCAT('%',#{productName},'%')
        </if>
        <if test="productId != null and productId != ''">
            AND P.PRODUCT_ID = #{productId}
        </if>
        ORDER BY P.PRODUCT_NAME
    </select>

    <select id="getProduct" parameterType="productDTO" resultType="productDTO">
        SELECT
            P.PRODUCT_ID productId,
            P.PRODUCT_NAME productName,
            P.PRODUCT_DESCRIPTION productDescription,
            P.PRODUCT_PRICE productPrice,
            P.PRODUCT_PICTURE productPicture,
            P.PRODUCT_ORDER_COUNT productOrderCount,
            P.PRODUCT_ENABLE productEnable,
            P.CREATE_TIME createTime,
            P.LAST_UPDATE_TIME lastUpdateTime,
            P.MERCHANT_ID merchantId
        FROM
            PRODUCT P
        WHERE
            P.PRODUCT_ENABLE = #{productEnable}
        AND P.MERCHANT_ID = #{merchantId}
        AND P.PRODUCT_ID = #{productId}
    </select>

    <update id="updateProductEnable" parameterType="productDTO">
        UPDATE PRODUCT
            SET
                PRODUCT_ENABLE = #{productEnable},
                LAST_UPDATE_TIME = now()
        WHERE
            MERCHANT_ID = #{merchantId}
        AND PRODUCT_ID IN
        <foreach collection="productIdList" index="index" item="productId" open="(" separator="," close=")">
            #{productId}
        </foreach>
    </update>

    <update id="updateProductPrice" parameterType="productDTO">
        UPDATE PRODUCT
           SET
               PRODUCT_PRICE = #{productPrice},
               LAST_UPDATE_TIME = now()
        WHERE
            MERCHANT_ID = #{merchantId}
        AND PRODUCT_ID = #{productId}
    </update>

</mapper>